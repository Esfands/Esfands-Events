{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Esfands\\\\Overlays\\\\overlays\\\\events\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport classNames from 'classnames';\nimport useEvents from '../util/hooks/useEvents';\nimport Prediction from './prediction/Prediction';\nimport Poll from './poll/Poll';\nimport Marquee from './marquee/Marquee';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst offsetMap = {\n  top: 0,\n  middle: 300\n};\nconst App = () => {\n  _s();\n  var _events$prediction, _events$poll;\n  const [events, connected] = useEvents();\n  let offset = ((_events$prediction = events.prediction) === null || _events$prediction === void 0 ? void 0 : _events$prediction.offset) || ((_events$poll = events.poll) === null || _events$poll === void 0 ? void 0 : _events$poll.offset);\n  offset = isNaN(offset) ? offsetMap[offset] || 0 : offset;\n  const eventListClasses = classNames({\n    'no-event': !events.prediction && !events.poll,\n    'position-absolute': offset > 0\n  });\n  const eventListStyle = {\n    top: `${offset}px`\n  };\n  return connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column justify-content-end align-items-end\",\n    children: [/*#__PURE__*/_jsxDEV(Marquee, {\n      data: events.prediction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"events\",\n      className: eventListClasses,\n      style: eventListStyle,\n      children: [/*#__PURE__*/_jsxDEV(Prediction, {\n        data: events.prediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Poll, {\n        data: events.poll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-connection position-absolute text-shadow\",\n    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-white\",\n      children: \"Prediction overlay not connected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vr0W0ycHgPIVlUD7/pXcnuxddok=\", false, function () {\n  return [useEvents];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["classNames","useEvents","Prediction","Poll","Marquee","offsetMap","top","middle","App","events","connected","offset","prediction","poll","isNaN","eventListClasses","eventListStyle"],"sources":["D:/Development/Esfands/Overlays/overlays/events/src/components/App.jsx"],"sourcesContent":["import classNames from 'classnames';\nimport useEvents from '../util/hooks/useEvents';\n\nimport Prediction from './prediction/Prediction';\nimport Poll from './poll/Poll';\nimport Marquee from './marquee/Marquee';\n\nconst offsetMap = {\n  top: 0,\n  middle: 300,\n};\n\nconst App = () => {\n  const [events, connected] = useEvents();\n\n  let offset = events.prediction?.offset || events.poll?.offset;\n  offset = isNaN(offset) ? offsetMap[offset] || 0 : offset;\n\n  const eventListClasses = classNames({\n    'no-event': !events.prediction && !events.poll,\n    'position-absolute': offset > 0,\n  });\n  const eventListStyle = {\n    top: `${offset}px`,\n  };\n\n  return connected ? (\n    <div className=\"d-flex flex-column justify-content-end align-items-end\">\n      <Marquee data={events.prediction} />\n      <div id=\"events\" className={eventListClasses} style={eventListStyle}>\n        <Prediction data={events.prediction} />\n        <Poll data={events.poll} />\n      </div>\n    </div>\n  ) : (\n    <div className=\"no-connection position-absolute text-shadow\">\n      <h5 className=\"text-white\">Prediction overlay not connected</h5>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAE/C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,OAAO,MAAM,mBAAmB;AAAC;AAExC,MAAMC,SAAS,GAAG;EAChBC,GAAG,EAAE,CAAC;EACNC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,GAAG,GAAG,MAAM;EAAA;EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,SAAS,EAAE;EAEvC,IAAIU,MAAM,GAAG,uBAAAF,MAAM,CAACG,UAAU,uDAAjB,mBAAmBD,MAAM,sBAAIF,MAAM,CAACI,IAAI,iDAAX,aAAaF,MAAM;EAC7DA,MAAM,GAAGG,KAAK,CAACH,MAAM,CAAC,GAAGN,SAAS,CAACM,MAAM,CAAC,IAAI,CAAC,GAAGA,MAAM;EAExD,MAAMI,gBAAgB,GAAGf,UAAU,CAAC;IAClC,UAAU,EAAE,CAACS,MAAM,CAACG,UAAU,IAAI,CAACH,MAAM,CAACI,IAAI;IAC9C,mBAAmB,EAAEF,MAAM,GAAG;EAChC,CAAC,CAAC;EACF,MAAMK,cAAc,GAAG;IACrBV,GAAG,EAAG,GAAEK,MAAO;EACjB,CAAC;EAED,OAAOD,SAAS,gBACd;IAAK,SAAS,EAAC,wDAAwD;IAAA,wBACrE,QAAC,OAAO;MAAC,IAAI,EAAED,MAAM,CAACG;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACpC;MAAK,EAAE,EAAC,QAAQ;MAAC,SAAS,EAAEG,gBAAiB;MAAC,KAAK,EAAEC,cAAe;MAAA,wBAClE,QAAC,UAAU;QAAC,IAAI,EAAEP,MAAM,CAACG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACvC,QAAC,IAAI;QAAC,IAAI,EAAEH,MAAM,CAACI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACF,gBAEN;IAAK,SAAS,EAAC,6CAA6C;IAAA,uBAC1D;MAAI,SAAS,EAAC,YAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAsC;IAAA;IAAA;IAAA;EAAA,QAEnE;AACH,CAAC;AAAC,GA3BIL,GAAG;EAAA,QACqBP,SAAS;AAAA;AAAA,KADjCO,GAAG;AA6BT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
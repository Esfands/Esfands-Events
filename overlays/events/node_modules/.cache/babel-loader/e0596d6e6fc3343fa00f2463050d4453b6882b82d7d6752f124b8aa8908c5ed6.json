{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst SERVER_TIMEOUT_HOURS = 23;\nconst RETRY_SECONDS = 15;\nconst WEBSOCKET_URL = process.env.NODE_ENV === 'production' ? 'wss://api.retpaladinbot.com/esfandevents' : 'ws://localhost:8080/eventsub';\nconst useWebSocket = () => {\n  _s();\n  const [event, setEvent] = useState(null);\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    let keepAlive, retry;\n    let ws = new WebSocket(WEBSOCKET_URL);\n    ws.onopen = e => {\n      console.log('WebSocket connected', e);\n      setConnected(true);\n    };\n    ws.onmessage = e => {\n      const data = JSON.parse(e.data);\n      console.log('Event received', data);\n      setEvent(data);\n    };\n    ws.onerror = e => {\n      console.error('WebSocket error', e);\n    };\n    ws.onclose = e => {\n      console.log('WebSocket closed', e.reason);\n      retry = setTimeout(() => window.location.reload(), RETRY_SECONDS * 1000);\n    };\n\n    // Handle page reload/close\n    window.onbeforeunload = () => {\n      clearInterval(keepAlive);\n      clearTimeout(retry);\n      ws.onclose = null;\n      ws.close();\n    };\n    keepAlive = setInterval(() => {\n      console.log('Sending keep-alive request');\n      ws.send('keepalive');\n    }, SERVER_TIMEOUT_HOURS * 60 * 60 * 1000);\n    return () => {\n      clearInterval(keepAlive);\n      clearTimeout(retry);\n      ws.close();\n    };\n  }, []);\n  return [event, connected];\n};\n_s(useWebSocket, \"jZN0A5avBGj/YSiC5n4JTgksB8c=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","SERVER_TIMEOUT_HOURS","RETRY_SECONDS","WEBSOCKET_URL","process","env","NODE_ENV","useWebSocket","event","setEvent","connected","setConnected","keepAlive","retry","ws","WebSocket","onopen","e","console","log","onmessage","data","JSON","parse","onerror","error","onclose","reason","setTimeout","window","location","reload","onbeforeunload","clearInterval","clearTimeout","close","setInterval","send"],"sources":["D:/Development/Esfands/Overlays/overlays/events/src/util/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst SERVER_TIMEOUT_HOURS = 23;\nconst RETRY_SECONDS = 15;\n\nconst WEBSOCKET_URL =\n  process.env.NODE_ENV === 'production'\n    ? 'wss://api.retpaladinbot.com/esfandevents'\n    : 'ws://localhost:8080/eventsub';\n\nconst useWebSocket = () => {\n  const [event, setEvent] = useState(null);\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    let keepAlive, retry;\n    let ws = new WebSocket(WEBSOCKET_URL);\n\n    ws.onopen = (e) => {\n      console.log('WebSocket connected', e);\n      setConnected(true);\n    };\n\n    ws.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n      console.log('Event received', data);\n      setEvent(data);\n    };\n\n    ws.onerror = (e) => {\n      console.error('WebSocket error', e);\n    };\n\n    ws.onclose = (e) => {\n      console.log('WebSocket closed', e.reason);\n      retry = setTimeout(() => window.location.reload(), RETRY_SECONDS * 1000);\n    };\n\n    // Handle page reload/close\n    window.onbeforeunload = () => {\n      clearInterval(keepAlive);\n      clearTimeout(retry);\n      ws.onclose = null;\n      ws.close();\n    };\n\n    keepAlive = setInterval(() => {\n      console.log('Sending keep-alive request');\n      ws.send('keepalive');\n    }, SERVER_TIMEOUT_HOURS * 60 * 60 * 1000);\n\n    return () => {\n      clearInterval(keepAlive);\n      clearTimeout(retry);\n      ws.close();\n    };\n  }, []);\n\n  return [event, connected];\n};\n\nexport default useWebSocket;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,oBAAoB,GAAG,EAAE;AAC/B,MAAMC,aAAa,GAAG,EAAE;AAExB,MAAMC,aAAa,GACjBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GACjC,0CAA0C,GAC1C,8BAA8B;AAEpC,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,EAAEC,KAAK;IACpB,IAAIC,EAAE,GAAG,IAAIC,SAAS,CAACZ,aAAa,CAAC;IAErCW,EAAE,CAACE,MAAM,GAAIC,CAAC,IAAK;MACjBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,CAAC,CAAC;MACrCN,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC;IAEDG,EAAE,CAACM,SAAS,GAAIH,CAAC,IAAK;MACpB,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,CAAC,CAACI,IAAI,CAAC;MAC/BH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,IAAI,CAAC;MACnCZ,QAAQ,CAACY,IAAI,CAAC;IAChB,CAAC;IAEDP,EAAE,CAACU,OAAO,GAAIP,CAAC,IAAK;MAClBC,OAAO,CAACO,KAAK,CAAC,iBAAiB,EAAER,CAAC,CAAC;IACrC,CAAC;IAEDH,EAAE,CAACY,OAAO,GAAIT,CAAC,IAAK;MAClBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,CAAC,CAACU,MAAM,CAAC;MACzCd,KAAK,GAAGe,UAAU,CAAC,MAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE,EAAE7B,aAAa,GAAG,IAAI,CAAC;IAC1E,CAAC;;IAED;IACA2B,MAAM,CAACG,cAAc,GAAG,MAAM;MAC5BC,aAAa,CAACrB,SAAS,CAAC;MACxBsB,YAAY,CAACrB,KAAK,CAAC;MACnBC,EAAE,CAACY,OAAO,GAAG,IAAI;MACjBZ,EAAE,CAACqB,KAAK,EAAE;IACZ,CAAC;IAEDvB,SAAS,GAAGwB,WAAW,CAAC,MAAM;MAC5BlB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzCL,EAAE,CAACuB,IAAI,CAAC,WAAW,CAAC;IACtB,CAAC,EAAEpC,oBAAoB,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAEzC,OAAO,MAAM;MACXgC,aAAa,CAACrB,SAAS,CAAC;MACxBsB,YAAY,CAACrB,KAAK,CAAC;MACnBC,EAAE,CAACqB,KAAK,EAAE;IACZ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAAC3B,KAAK,EAAEE,SAAS,CAAC;AAC3B,CAAC;AAAC,GAjDIH,YAAY;AAmDlB,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}